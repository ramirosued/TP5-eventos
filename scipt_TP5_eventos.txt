-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.event_categories
(
    id serial NOT NULL,
    name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    display_order numeric NOT NULL,
    CONSTRAINT event_categories_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_enrollments
(
    id serial NOT NULL,
    id_user integer NOT NULL,
    description character(100)[] COLLATE pg_catalog."default" NOT NULL,
    registration_date_time date NOT NULL,
    attended numeric NOT NULL,
    observations character(100)[] COLLATE pg_catalog."default" NOT NULL,
    rating numeric NOT NULL,
    id_event integer NOT NULL,
    CONSTRAINT event_enrollments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_locations
(
    id serial NOT NULL,
    name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    full_address character(25)[] COLLATE pg_catalog."default" NOT NULL,
    max_capacity character(25)[] COLLATE pg_catalog."default" NOT NULL,
    latitude numeric NOT NULL,
    longitude numeric NOT NULL,
    id_creator_user integer NOT NULL,
    id_location integer NOT NULL,
    CONSTRAINT event_locations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_tags
(
    id serial NOT NULL,
    id_tag integer NOT NULL,
    id_event integer NOT NULL,
    CONSTRAINT event_tags_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.events
(
    id serial NOT NULL,
    name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    description character(50)[] COLLATE pg_catalog."default" NOT NULL,
    id_event_location integer NOT NULL,
    start_date date NOT NULL,
    duration_in_minutes numeric NOT NULL,
    price numeric NOT NULL,
    enabled_for_enrollment numeric NOT NULL,
    max_assistence numeric NOT NULL,
    id_creator_user integer NOT NULL,
    id_event_category integer NOT NULL,
    CONSTRAINT events_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.locations
(
    id serial NOT NULL,
    name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    latitude numeric NOT NULL,
    longitude numeric,
    id_province serial NOT NULL,
    CONSTRAINT locations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.provinces
(
    id serial NOT NULL,
    name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    full_name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    latitude numeric NOT NULL,
    longitude numeric NOT NULL,
    display_order numeric NOT NULL,
    CONSTRAINT provinces_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tags
(
    id serial NOT NULL,
    name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tags_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    first_name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    last_name character(25)[] COLLATE pg_catalog."default" NOT NULL,
    username character(25)[] COLLATE pg_catalog."default" NOT NULL,
    password character(50)[] COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.event_enrollments
    ADD FOREIGN KEY (id_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.event_enrollments
    ADD FOREIGN KEY (id_event)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.event_locations
    ADD FOREIGN KEY (id_location)
    REFERENCES public.locations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.event_tags
    ADD FOREIGN KEY (id_tag)
    REFERENCES public.tags (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.event_tags
    ADD FOREIGN KEY (id_event)
    REFERENCES public.events (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.events
    ADD FOREIGN KEY (id_event_location)
    REFERENCES public.event_locations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.events
    ADD FOREIGN KEY (id_event_category)
    REFERENCES public.event_categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.events
    ADD FOREIGN KEY (id_creator_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.locations
    ADD FOREIGN KEY (id_province)
    REFERENCES public.provinces (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;